describe('Update', () => {
    it('should return an updated {{{ props.model_name_sUcfirst }}}', async () => {
      const updateSpy = jest.spyOn(service, 'update');
      expect(controller.update({{#if props.isPrimaryKeyNumber}}1{{else}}'1'{{/if}}, mockUpdate{{{ props.model_name_sUcfirst }}})).resolves.toBe(mock{{{ props.model_name_sUcfirst }}});
      expect(updateSpy).toHaveBeenCalledTimes(1);
      expect(updateSpy).toHaveBeenCalledWith({{#if props.isPrimaryKeyNumber}}1{{else}}'1'{{/if}}, mockUpdate{{{ props.model_name_sUcfirst }}});
    });
});
