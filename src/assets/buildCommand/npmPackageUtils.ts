import toolbox from '@src/toolbox/toolbox.js';

const { fileSystem, path } = toolbox;

export async function updateNpmPackage(output_path: string, manager: string, app_name: string) {
  const packageJson = await fileSystem.readAsync(path.join(output_path, 'package.json'), 'json');
  packageJson.name = app_name;
  packageJson.version = '1.0.0';
  packageJson.description = 'dist folder generated by skulljs-cli';
  packageJson.license = 'MIT';
  delete packageJson.jest;

  if (manager == 'pm2') {
    packageJson.scripts = {
      'pm2:start': 'pm2 start pm2.ecosystem.json',
      'pm2:stop': 'pm2 stop pm2.ecosystem.json',
      'pm2:restart': 'pm2 restart pm2.ecosystem.json',
      'pm2:reload': 'pm2 reload pm2.ecosystem.json',
      'pm2:delete': 'pm2 delete pm2.ecosystem.json',
      'pm2:startup': 'pm2 startup',
      'pm2:save': 'pm2 save',
    };
  } else if (manager == 'docker') {
    packageJson.scripts = {
      'docker:build': 'docker compose build',
      'docker:up': 'docker compose up -d',
      'docker:down': 'docker compose down',
    };
  }

  await fileSystem.writeAsync(`${path.join(output_path, 'package.json')}`, JSON.stringify(packageJson, null, 2));
}

export default {
  updateNpmPackage,
};
